<?php
/**
 * MxPlatformApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * MX Platform API
 *
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Api;

use OpenAPI\Client\Api\MxPlatformApi;
use OpenAPI\Client\Api\UserApi;
use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use OpenAPI\Client\Model\UserCreateRequest;
use OpenAPI\Client\Model\UserCreateRequestBody;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MxPlatformApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for aggregateMember
     *
     * Aggregate member.
     *
     */
    public function testAggregateMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for checkBalances
     *
     * Check balances.
     *
     */
    public function testCheckBalances()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCategory
     *
     * Create category.
     *
     */
    public function testCreateCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createManagedAccount
     *
     * Create managed account.
     *
     */
    public function testCreateManagedAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createManagedMember
     *
     * Create managed member.
     *
     */
    public function testCreateManagedMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createManagedTransaction
     *
     * Create managed transaction.
     *
     */
    public function testCreateManagedTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createManualAccount
     *
     * Create manual account.
     *
     */
    public function testCreateManualAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createMember
     *
     * Create member.
     *
     */
    public function testCreateMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTag
     *
     * Create tag.
     *
     */
    public function testCreateTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTagging
     *
     * Create tagging.
     *
     */
    public function testCreateTagging()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTransactionRule
     *
     * Create transaction rule.
     *
     */
    public function testCreateTransactionRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createUser
     *
     * Create user.
     *
     */
    public function testCreateUser()
    {
        $config = Configuration::getDefaultConfiguration()
            ->setUsername('')
            ->setPassword('');
        $config->setHost("https://int-api.mx.com");

        $apiInstance = new UserApi(
            new \GuzzleHttp\Client(),
            $config
        );

        $user = new UserCreateRequest();
        $user->setId("dfsfs");

        $user_create_request_body = new UserCreateRequestBody();
        $user_create_request_body->setUser($user);

        try {
            $result = $apiInstance->createUser($user_create_request_body);
            print_r($result);
        } catch (\Exception $e) {
            echo 'Exception when calling UserApi->createUser: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for creditCard
     *
     * Read a Credit Card Product.
     *
     */
    public function testCreditCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCategory
     *
     * Delete category.
     *
     */
    public function testDeleteCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteManagedAccount
     *
     * Delete managed account.
     *
     */
    public function testDeleteManagedAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteManagedMember
     *
     * Delete managed member.
     *
     */
    public function testDeleteManagedMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteManagedTransaction
     *
     * Delete managed transaction.
     *
     */
    public function testDeleteManagedTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteManualAccount
     *
     * Delete manual account.
     *
     */
    public function testDeleteManualAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteMember
     *
     * Delete member.
     *
     */
    public function testDeleteMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTag
     *
     * Delete tag.
     *
     */
    public function testDeleteTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTagging
     *
     * Delete tagging.
     *
     */
    public function testDeleteTagging()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTransactionRule
     *
     * Delete transaction rule.
     *
     */
    public function testDeleteTransactionRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUser
     *
     * Delete user.
     *
     */
    public function testDeleteUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deprecatedRequestPaymentProcessorAuthorizationCode
     *
     * (Deprecated) Request an authorization code..
     *
     */
    public function testDeprecatedRequestPaymentProcessorAuthorizationCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadStatementPDF
     *
     * Download statement pdf.
     *
     */
    public function testDownloadStatementPDF()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for downloadTaxDocument
     *
     * Download a Tax Document PDF.
     *
     */
    public function testDownloadTaxDocument()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enhanceTransactions
     *
     * Enhance transactions.
     *
     */
    public function testEnhanceTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for extendHistory
     *
     * Extend history.
     *
     */
    public function testExtendHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchRewards
     *
     * Fetch Rewards.
     *
     */
    public function testFetchRewards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchStatements
     *
     * Fetch statements.
     *
     */
    public function testFetchStatements()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchTaxDocuments
     *
     * Fetch Tax Documents.
     *
     */
    public function testFetchTaxDocuments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for identifyMember
     *
     * Identify member.
     *
     */
    public function testIdentifyMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAccountNumbersByAccount
     *
     * List account numbers by account.
     *
     */
    public function testListAccountNumbersByAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAccountNumbersByMember
     *
     * List account numbers by member.
     *
     */
    public function testListAccountNumbersByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAccountOwnersByMember
     *
     * List account owners by member.
     *
     */
    public function testListAccountOwnersByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCategories
     *
     * List categories.
     *
     */
    public function testListCategories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDefaultCategories
     *
     * List default categories.
     *
     */
    public function testListDefaultCategories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDefaultCategoriesByUser
     *
     * List default categories by user.
     *
     */
    public function testListDefaultCategoriesByUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listFavoriteInstitutions
     *
     * List favorite institutions.
     *
     */
    public function testListFavoriteInstitutions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHoldings
     *
     * List holdings.
     *
     */
    public function testListHoldings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHoldingsByAccount
     *
     * List holdings by account.
     *
     */
    public function testListHoldingsByAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHoldingsByMember
     *
     * List holdings by member.
     *
     */
    public function testListHoldingsByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listInstitutionCredentials
     *
     * List institution credentials.
     *
     */
    public function testListInstitutionCredentials()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listInstitutions
     *
     * List institutions.
     *
     */
    public function testListInstitutions()
    {
        $config = Configuration::getDefaultConfiguration()
            ->setUsername('')
            ->setPassword('');
        $config->setHost("https://int-api.mx.com");

        $apiInstance = new MxPlatformApi(
            new \GuzzleHttp\Client(),
            $config
        );
        $name = "";
        $page = 1;
        $records_per_page = 100;
        try {
            $result = $apiInstance->listInstitutions($name, $page, $records_per_page);
            print_r($result);
        } catch (\Exception $e) {
            echo 'Exception when calling MxPlatformApi->listInstitutions: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for listManagedAccounts
     *
     * List managed accounts.
     *
     */
    public function testListManagedAccounts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listManagedInstitutions
     *
     * List managed institutions.
     *
     */
    public function testListManagedInstitutions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listManagedMembers
     *
     * List managed members.
     *
     */
    public function testListManagedMembers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listManagedTransactions
     *
     * List managed transactions.
     *
     */
    public function testListManagedTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMemberAccounts
     *
     * List accounts by member.
     *
     */
    public function testListMemberAccounts()
    {


    }

    /**
     * Test case for listMemberChallenges
     *
     * List member challenges.
     *
     */
    public function testListMemberChallenges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMemberCredentials
     *
     * List member credentials.
     *
     */
    public function testListMemberCredentials()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMembers
     *
     * List members.
     *
     */
    public function testListMembers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMerchants
     *
     * List merchants.
     *
     */
    public function testListMerchants()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRewards
     *
     * List Rewards.
     *
     */
    public function testListRewards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStatementsByMember
     *
     * List statements by member.
     *
     */
    public function testListStatementsByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTaggings
     *
     * List taggings.
     *
     */
    public function testListTaggings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTags
     *
     * List tags.
     *
     */
    public function testListTags()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTaxDocuments
     *
     * List Tax Documents.
     *
     */
    public function testListTaxDocuments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTransactionRules
     *
     * List transaction rules.
     *
     */
    public function testListTransactionRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTransactions
     *
     * List transactions.
     *
     */
    public function testListTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTransactionsByAccount
     *
     * List transactions by account.
     *
     */
    public function testListTransactionsByAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTransactionsByMember
     *
     * List transactions by member.
     *
     */
    public function testListTransactionsByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTransactionsByTag
     *
     * List transactions by tag.
     *
     */
    public function testListTransactionsByTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUserAccounts
     *
     * List accounts.
     *
     */
    public function testListUserAccounts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUsers
     *
     * List users.
     *
     */
    public function testListUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readAccount
     *
     * Read account.
     *
     */
    public function testReadAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readAccountByMember
     *
     * Read account by member.
     *
     */
    public function testReadAccountByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readCategory
     *
     * Read a custom category.
     *
     */
    public function testReadCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readDefaultCategory
     *
     * Read a default category.
     *
     */
    public function testReadDefaultCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readHolding
     *
     * Read holding.
     *
     */
    public function testReadHolding()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readInstitution
     *
     * Read institution.
     *
     */
    public function testReadInstitution()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readManagedAccount
     *
     * Read managed account.
     *
     */
    public function testReadManagedAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readManagedMember
     *
     * Read managed member.
     *
     */
    public function testReadManagedMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readManagedTransaction
     *
     * Read managed transaction.
     *
     */
    public function testReadManagedTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readMember
     *
     * Read member.
     *
     */
    public function testReadMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readMemberStatus
     *
     * Read member status.
     *
     */
    public function testReadMemberStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readMerchant
     *
     * Read merchant.
     *
     */
    public function testReadMerchant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readMerchantLocation
     *
     * Read merchant location.
     *
     */
    public function testReadMerchantLocation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readRewards
     *
     * Read Reward.
     *
     */
    public function testReadRewards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readStatementByMember
     *
     * Read statement by member.
     *
     */
    public function testReadStatementByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readTag
     *
     * Read tag.
     *
     */
    public function testReadTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readTagging
     *
     * Read tagging.
     *
     */
    public function testReadTagging()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readTaxDocument
     *
     * Read a Tax Document.
     *
     */
    public function testReadTaxDocument()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readTransaction
     *
     * Read transaction.
     *
     */
    public function testReadTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readTransactionRule
     *
     * Read transaction rule.
     *
     */
    public function testReadTransactionRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for readUser
     *
     * Read user.
     *
     */
    public function testReadUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestAuthorizationCode
     *
     * Request an authorization code..
     *
     */
    public function testRequestAuthorizationCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestConnectWidgetURL
     *
     * Request connect widget url.
     *
     */
    public function testRequestConnectWidgetURL()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestOAuthWindowURI
     *
     * Request oauth window uri.
     *
     */
    public function testRequestOAuthWindowURI()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestWidgetURL
     *
     * Request widget url.
     *
     */
    public function testRequestWidgetURL()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resumeAggregation
     *
     * Resume aggregation.
     *
     */
    public function testResumeAggregation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAccountByMember
     *
     * Update account by member.
     *
     */
    public function testUpdateAccountByMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCategory
     *
     * Update category.
     *
     */
    public function testUpdateCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateManagedAccount
     *
     * Update managed account.
     *
     */
    public function testUpdateManagedAccount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateManagedMember
     *
     * Update managed member.
     *
     */
    public function testUpdateManagedMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateManagedTransaction
     *
     * Update managed transaction.
     *
     */
    public function testUpdateManagedTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateMember
     *
     * Update member.
     *
     */
    public function testUpdateMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTag
     *
     * Update tag.
     *
     */
    public function testUpdateTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTagging
     *
     * Update tagging.
     *
     */
    public function testUpdateTagging()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTransaction
     *
     * Update transaction.
     *
     */
    public function testUpdateTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTransactionRule
     *
     * Update transaction_rule.
     *
     */
    public function testUpdateTransactionRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateUser
     *
     * Update user.
     *
     */
    public function testUpdateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersUserGuidMonthlyCashFlowProfileGet
     *
     * Read monthly cash flow profile.
     *
     */
    public function testUsersUserGuidMonthlyCashFlowProfileGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersUserGuidMonthlyCashFlowProfilePut
     *
     * Update monthly cash flow profile.
     *
     */
    public function testUsersUserGuidMonthlyCashFlowProfilePut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersUserGuidTransactionsTransactionGuidSplitDelete
     *
     * Delete split transactions.
     *
     */
    public function testUsersUserGuidTransactionsTransactionGuidSplitDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for usersUserGuidTransactionsTransactionGuidSplitPost
     *
     * Create split transactions.
     *
     */
    public function testUsersUserGuidTransactionsTransactionGuidSplitPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyMember
     *
     * Verify member.
     *
     */
    public function testVerifyMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
